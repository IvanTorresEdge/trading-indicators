//@version=5
// Script Name: Swing Highs/Lows Levels
// Author: Ivan Torres
// Copyright: Â© 2023 Ivan Torres. All Rights Reserved.
// License: MIT License
// Description: This indicator displays swing highs and lows for the previous day, week, and month with customizable settings for a personalized experience.
// Contact: @IvanTorresEdge
indicator("Swing Highs/Lows", shorttitle="Swing Highs/Lows", overlay=true)

// Monthly Timeframe Inputs
bool showMonth = input(false, "Show Monthly Timeframe")
color color_month = input(#ab47bc, "Monthly Color")
int opacity_month = input.int(30, "Monthly Opacity", minval=0, maxval=100, step=1)
int width_month = input.int(3, "Monthly Width", minval=1, maxval=10)

// Weekly Timeframe Inputs
bool showWeek = input(true, "Show Weekly Timeframe")
color color_week = input(#f57f17, "Weekly Color")
int opacity_week = input.int(30, "Weekly Opacity", minval=0, maxval=100, step=1)
int width_week = input.int(3, "Weekly Width", minval=1, maxval=10)

// Daily Timeframe Inputs
bool showDay = input(true, "Show Daily Timeframe")
color color_day = input(#00a6ff, "Daily Color")
int opacity_day = input.int(30, "Daily Opacity", minval=0, maxval=100, step=1)
int width_day = input.int(2, "Daily Width", minval=1, maxval=10)

// Daily Close Timeframe Inputs
color close_color_day = input(#0fb200, "Daily Close Color")
int close_opacity_day = input.int(30, "Daily Close Opacity", minval=0, maxval=100, step=1)
int close_width_day = input.int(2, "Daily Close Width", minval=1, maxval=10)

bool showLabels = input(true, "Show Labels")

var float highPrice = na
var float lowPrice = na

var label prevMonthHighLabel = na
var label prevMonthLowLabel = na
var label prevMonthCloseLabel = na

var label prevWeekHighLabel = na
var label prevWeekLowLabel = na
var label prevWeekCloseLabel = na

var label prevDayHighLabel = na
var label prevDayLowLabel = na
var label prevDayCloseLabel = na

var float highToUse = na
var float closeToUse = na
var float lowToUse = na

createLabel(labelRef, price, labelText, color) =>
    var label newLabel = labelRef
    if showLabels and barstate.islast and price >= lowPrice and price <= highPrice
        if not na(labelRef)
            label.set_xy(labelRef, bar_index, price)
            label.set_text(labelRef, labelText)
            label.set_textcolor(labelRef, color)
        else
            newLabel := label.new(bar_index + 5, price, text=labelText, color=color.new(#000000, 100), textcolor = color, style=label.style_label_center)
    newLabel

if time == chart.left_visible_bar_time
    highPrice := high
    lowPrice := low

if time >= chart.left_visible_bar_time and time <= chart.right_visible_bar_time
    highPrice := math.max(highPrice, high)
    lowPrice := math.min(lowPrice, low)

if barstate.isrealtime
    highToUse := high[1]
    closeToUse := close[1]
    lowToUse := low[1]
else
    highToUse := high[0]
    closeToUse := close[0]
    lowToUse := low[0]

// Timeframe Data
month_high = request.security(syminfo.tickerid, "M", highToUse)
month_close = request.security(syminfo.tickerid, "M", closeToUse)
month_low = request.security(syminfo.tickerid, "M", lowToUse)

week_high = request.security(syminfo.tickerid, "W", highToUse)
week_close = request.security(syminfo.tickerid, "W", closeToUse)
week_low = request.security(syminfo.tickerid, "W", lowToUse)

day_high = request.security(syminfo.tickerid, "D", highToUse)
day_close = request.security(syminfo.tickerid, "D", closeToUse)
day_low = request.security(syminfo.tickerid, "D", lowToUse)

plot((showMonth and month_high >= lowPrice and month_high <= highPrice) ? month_high : na, "Previous Month High", color=color.new(color_month, opacity_month), style=plot.style_line, linewidth=width_month)
plot((showMonth and month_low >= lowPrice and month_low <= highPrice) ? month_low : na, "Previous Month Low", color=color.new(color_month, opacity_month), style=plot.style_line, linewidth=width_month)
plot((showMonth and month_close >= lowPrice and month_close <= highPrice) ? month_close : na, "Previous Month Close", color=color.new(color_month, opacity_month - 10), style=plot.style_line, linewidth=width_month - 1)

if showMonth
    createLabel(prevMonthHighLabel, month_high, "PMH", color.new(color_month, opacity_month))
    createLabel(prevMonthLowLabel, month_low, "PML", color.new(color_month, opacity_month))
    createLabel(prevMonthCloseLabel, month_close, "PMC", color.new(color_month, opacity_month))

plot((showWeek and week_high >= lowPrice and week_high <= highPrice) ? week_high : na, "Previous Week High", color=color.new(color_week, opacity_week), style=plot.style_line, linewidth=width_week)
plot((showWeek and week_low >= lowPrice and week_low <= highPrice) ? week_low : na, "Previous Week Low", color=color.new(color_week, opacity_week), style=plot.style_line, linewidth=width_week)
plot((showWeek and week_close >= lowPrice and week_close <= highPrice) ? week_close : na, "Previous Week Close", color=color.new(color_week, opacity_week - 10), style=plot.style_line, linewidth=width_week - 1)

if showWeek
    createLabel(prevWeekHighLabel, week_high, "PWH", color.new(color_week, opacity_week))
    createLabel(prevWeekLowLabel, week_low, "PWL", color.new(color_week, opacity_week))
    createLabel(prevWeekCloseLabel, week_close, "PWC", color.new(color_week, opacity_week))

plot((showDay and day_high >= lowPrice and day_high <= highPrice) ? day_high : na, "Previous Day High", color=color.new(color_day, opacity_day), style=plot.style_line, linewidth=width_day)
plot((showDay and day_low >= lowPrice and day_low <= highPrice) ? day_low : na, "Previous Day Low", color=color.new(color_day, opacity_day), style=plot.style_line, linewidth=width_day)
plot((showDay and day_close >= lowPrice and day_close <= highPrice) ? day_close : na, "Previous Day Close", color=color.new(close_color_day, close_opacity_day), style=plot.style_line, linewidth=close_width_day)

if showDay
    createLabel(prevDayHighLabel, day_high, "PDH", color_day)
    createLabel(prevDayLowLabel, day_low, "PDL", color_day)
    createLabel(prevDayCloseLabel, day_close, "PDC", close_color_day)
